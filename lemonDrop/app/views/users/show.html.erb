<head>
  <script type="text/javascript" src="html5-canvas-drawing-app.js"></script>
</head>
<!-- functionality showing alert message if user has not filled in bio  -->
<% if @user.bio.blank? %>
  <p>Welcome to Lemon Drop. Please don't forget to fill out your profile so other can stay connected with you.</p>
<% end %>

  <div id="canvasDiv" width="490" height="220">
  </div>

    <script>
    $('#canvas').mousedown(function(e){
      var mouseX = e.pageX - this.offsetLeft;
      var mouseY = e.pageY - this.offsetTop;
        
      paint = true;
      addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
      redraw();
    });

    $('#canvas').mousemove(function(e){
      if(paint){
        addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
        redraw();
      }
    });

    $('#canvas').mouseup(function(e){
      paint = false;
    });

    $('#canvas').mouseleave(function(e){
      paint = false;
    });

    var clickX = new Array();
    var clickY = new Array();
    var clickDrag = new Array();
    var paint;

    function addClick(x, y, dragging)
    {
      clickX.push(x);
      clickY.push(y);
      clickDrag.push(dragging);
    }

    function redraw(){
      context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas
      
      context.strokeStyle = "#df4b26";
      context.lineJoin = "round";
      context.lineWidth = 5;
          
      for(var i=0; i < clickX.length; i++) {    
        context.beginPath();
        if(clickDrag[i] && i){
          context.moveTo(clickX[i-1], clickY[i-1]);
         }else{
           context.moveTo(clickX[i]-1, clickY[i]);
         }
         context.lineTo(clickX[i], clickY[i]);
         context.closePath();
         context.stroke();
      }
    }
  </script>
<!-- profile for individual user -->
<h2>Profile</h2>
<%= react_component("ProfileContainer", {:controller => @controller.to_json}) %>
<%= react_component("UserSearchContainer", {:users => @users.to_json}) %>
<!-- Posts most recent activity in feed on group page -->
<h2>Latest Post</h2>
<!-- erb for loop -->
<% @posts.each do |p| %>
  <i>Posted <%= time_ago_in_words(p.created_at) %> ago.</i><br>
  <%= p.content %><br>
  <%= p.tags %><br>
  vote: <%= p.vote %><br><br>
<% end %>
<%= react_component("TwitterContainer", {:controller => @controller.to_json}) %>
